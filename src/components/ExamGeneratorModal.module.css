/* ===== Exam Generator Modal Styles ===== */

.modalOverlay {
  position: fixed;
  inset: 0;
  background-color: rgba(0, 0, 0, 0.6);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
}

.modalContent {
  background: white;
  padding: 1.5rem;
  border-radius: 0.75rem;
  width: 90%;
  max-width: 900px;
  max-height: 90vh;
  display: flex;
  flex-direction: column;
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  overflow: hidden;
}

.modalHeader {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  padding-bottom: 1rem;
  border-bottom: 1px solid #e5e7eb;
}

.headerContent {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  color: #1f2937;
}

.modalTitleContainer {
  display: flex;
  flex-direction: column;
}

.modalTitle {
  font-size: 1.25rem;
  font-weight: 600;
  margin: 0;
}

.modalSubtitle {
  font-size: 0.875rem;
  color: #6b7280;
  margin: 0;
}

.closeButton {
  background: none;
  border: none;
  font-size: 1.5rem;
  cursor: pointer;
  color: #9ca3af;
  padding: 0;
  line-height: 1;
}

.modalForm {
  overflow-y: auto;
  padding-top: 1.5rem;
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  flex-grow: 1;
}

/* Layout Grids */
.formGrid, .formGridWide {
  display: grid;
  gap: 1.5rem;
}

.formGrid {
  grid-template-columns: repeat(2, 1fr);
}

.formGridWide {
  grid-template-columns: 1fr;
}

.formColumn {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

/* Field Groups & Labels */
.fieldGroup, .fieldGroupFull {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.fieldGroupFull {
  grid-column: 1 / -1;
}

.fieldLabel {
  font-size: 0.875rem;
  font-weight: 600;
  color: #374151;
}

/* Form Inputs */
.inputRow {
  display: flex;
  align-items: center;
  gap: 0.75rem;
}

.inlineLabel {
  font-size: 0.875rem;
  color: #4b5563;
  flex-shrink: 0;
  width: 80px;
}

.fieldInput, .fieldSelect {
  width: 100%;
  padding: 0.5rem 0.75rem;
  border: 1px solid #d1d5db;
  border-radius: 0.375rem;
  font-size: 0.875rem;
  transition: border-color 0.2s, box-shadow 0.2s;
}

.fieldInput:focus, .fieldSelect:focus {
  outline: none;
  border-color: #3b82f6;
  box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.4);
}

/* Tag/Topic System */
.tagContainer {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  padding: 0.75rem;
  border: 1px solid #e5e7eb;
  border-radius: 0.5rem;
}

.tagsList {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
}

.tag {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  background-color: #f3f4f6;
  color: #374151;
  padding: 0.3rem 0.7rem;
  border-radius: 9999px;
  font-size: 0.8rem;
  font-weight: 500;
  cursor: pointer;
  border: 1px solid transparent;
  transition: all 0.2s ease;
}

.tag:hover {
  background-color: #e5e7eb;
}

.tag.tagSelected {
  background-color: #dbeafe;
  color: #1e40af;
  border-color: #93c5fd;
}

.tag.tagAI {
  background-color: #e0f2fe; /* Light blue for AI tags */
}

.tag.tagAI.tagSelected {
  background-color: #0c4a6e; /* Darker blue for selected AI tags */
  color: white;
}

.aiIcon {
  color: #0ea5e9;
}

.tag.tagSelected .aiIcon {
  color: #3b82f6;
}

.tag.tagAI.tagSelected .aiIcon {
  color: #7dd3fc;
}

.tagInputWrapper {
  display: flex;
  gap: 0.5rem;
}

.tagInput {
  flex-grow: 1;
  padding: 0.5rem 0.75rem;
  border: 1px solid #d1d5db;
  border-radius: 0.375rem;
}

.tagAddButton {
  padding: 0.5rem 1rem;
  background-color: #3b82f6;
  color: white;
  border: none;
  border-radius: 0.375rem;
  cursor: pointer;
  font-weight: 500;
}

/* Question Type Stepper */
.questionTypeGrid {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 0.75rem;
}

.questionTypeRow {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.5rem;
  background: #f9fafb;
  border-radius: 0.375rem;
}

.questionTypeLabel {
  font-size: 0.875rem;
}

.stepper {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.stepper button {
  width: 24px;
  height: 24px;
  border-radius: 50%;
  border: 1px solid #d1d5db;
  background: white;
  cursor: pointer;
  font-weight: bold;
}

/* Professor Mode Toggle */
.toggleContainer {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem;
  background: #f8fafc;
  border-radius: 0.5rem;
  border: 1px solid #e2e8f0;
}

.toggleLabel p {
  font-size: 0.8rem;
  color: #6b7280;
  margin: 0.25rem 0 0 0;
}

.switch {
  position: relative;
  display: inline-block;
  width: 50px;
  height: 28px;
}

.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  transition: .4s;
  border-radius: 28px;
}

.slider:before {
  position: absolute;
  content: "";
  height: 20px;
  width: 20px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  transition: .4s;
  border-radius: 50%;
}

input:checked + .slider {
  background-color: #3b82f6;
}

input:checked + .slider:before {
  transform: translateX(22px);
}

/* Actions */
.modalActions {
  padding-top: 1.5rem;
  border-top: 1px solid #e5e7eb;
  display: flex;
  justify-content: flex-end;
  gap: 0.75rem;
}

.cancelButton, .submitButton {
  padding: 0.6rem 1.2rem;
  border-radius: 0.375rem;
  border: 1px solid transparent;
  cursor: pointer;
  font-weight: 500;
}

.cancelButton {
  background: white;
  color: #374151;
  border-color: #d1d5db;
}

.submitButton {
  background: #3b82f6;
  color: white;
}

.submitButton:disabled {
  background: #9ca3af;
  cursor: not-allowed;
}

/* Loading/Error States */
.centeredContent {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  flex-grow: 1;
  gap: 1rem;
}

.spinner {
  width: 48px;
  height: 48px;
  border: 5px solid #f3f3f3;
  border-top: 5px solid #3b82f6;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.loadingTitle {
  font-size: 1.25rem;
  font-weight: 600;
}

.errorIcon {
  color: #ef4444;
}

.errorText {
  color: #b91c1c;
  max-width: 80%;
}

@media (max-width: 768px) {
  .modalContent { max-width: 100%; margin: 20px; max-height: calc(100vh - 40px); }
  .modalHeader { padding: 16px 20px; }
  .modalForm { padding: 16px; }
  .formGrid { grid-template-columns: 1fr; }
} 